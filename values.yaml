# Decidim Helm values
# Tree:
# |__ Image:
#   | <Docker image>
# |__ kubernetes-kind:
#   |__ sidekiq | web:
#     | <YAML configuration>

# /!\ Not a Kubernetes kind
# https://kubernetes.io/docs/concepts/
# Image contains information concerning the docker image of the application.
image:
  repository: rg.fr-par.scw.cloud/decidim-sen/decidim-sen
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

# A Deployment provides declarative updates for Pods and ReplicaSets.
# Documentation: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
deployment:
  web:
    name: ""
    nameOverride: ""
    fullname: ""
    fullnameOverride: ""
    replicaCount: 1
    spec:
      affinity: { }
      containers:
        port: 3000
        resources: { }
          # We usually recommend not to specify default resources and to leave this as a conscious
          # choice for the user. This also increases chances charts run on environments with little
          # resources, such as Minikube. If you do want to specify resources, uncomment the following
          # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
          # limits:
          #   cpu: 100m
          #   memory: 128Mi
          # requests:
        #   cpu: 100m
        #   memory: 128Mi
        securityContext: { }
          # capabilities:
          #   drop:
          #   - ALL
          # readOnlyRootFilesystem: true
        # runAsNonRoot: true
        # runAsUser: 1000
        startupProbe:
          path: ""
          initialDelaySeconds: 30
          failureThreshold: 30
          periodSeconds: 10
      imagePullSecrets: [ ]
      podAnnotations: { }
      podSecurityContext: { }
      nodeSelector: { }
      tolerations: [ ]
  sidekiq:
    name: ""
    nameOverride: ""
    fullname: ""
    fullnameOverride: ""

hpa:
  sidekiq:
    enabled: true
    minReplicas: 2
    maxReplicas: 100
    targetCPUUtilizationPercentage: 70
    stabilizationWindowSeconds: 30
    targetMemoryUtilizationPercentage: ""
  web:
    enabled: true
    minReplicas: 6
    maxReplicas: 100
    targetCPUUtilizationPercentage: 70
    stabilizationWindowSeconds: 30
    targetMemoryUtilizationPercentage: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# fsGroup: 2000

service:
  type: LoadBalancer
  port: 80
  targetPort: 3000

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
    cert-manager.io/issuer: letsencrypt-prod
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
        -  chart-example.local
      secretName: decidim-sen-ingress-secret

webContainerPort: 3000

migrateJob:
  ttlSecondsAfterFinished: 120
  command: ["bundle",  "exec", "rails", "db:migrate"]

databases:
  postgresql:
    externalPostgresDabatase: false
    database_url: "host.example.org"